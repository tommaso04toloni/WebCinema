@model WebCinema.Models.Sale

@{
    ViewData["Title"] = "Upsert";
}
<form method="post" asp-action="Upsert">
    @*i campi Product.Id e Product.ImageUrl sono recuperati dal Model passato alla View quando si effettua la Get su Upsert.
    Quando di fa la Post su Upsert, bisogna distinguere due casi:
    1) inserimento di un nuovo prodotto --> Id ==0 e ImageUrl==null
    2) aggiornamento di un prodotto esistente --> Id!=0 e ImageUrl!=null
    Nel secondo caso è necessario passare i campi Product.Id e Product.ImageUrl dalla View all'Action del Controller.
    Nel primo caso non sarebbe strettamente necessario, ma possono essere passati comunque senza problemi, perché corrispondono ai valori di default di un nuovo Product
    *@
    <input asp-for="Id" hidden />

    <div class="row">
        <div class="col-10">
            <div class="border p-3 mt-4 row">
                <div class="row pb-2">
                    <h2 class="text-primary">@(Model.Id != 0 ? "Update" : "Create") Sala</h2>
                    <hr />
                </div>
                @*<div asp-validation-summary="All"></div>*@
                <div class="row mb-3">
                    <label asp-for="NumeroSala" class="control-label"></label>
                    <input asp-for="NumeroSala" class="form-control" />
                    <span asp-validation-for="NumeroSala" class="text-danger"></span>
                </div>
                <div class="row mb-3">
                    <label asp-for="PostiDisponibili" class="control-label"></label>
                    <input asp-for="PostiDisponibili" class="form-control" />
                    <span asp-validation-for="PostiDisponibili" class="text-danger"></span>
                </div>
                <div class="row mb-3">
                    <label asp-for="IsSense" class="control-label"></label>
                    <input asp-for="IsSense" class="form-control" />
                    <span asp-validation-for="IsSense" class="text-danger"></span>
                </div>
                @*<div class="row mb-3 col-6">
                <label asp-for="Product.CategoryId"></label>
                <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select">
                <option disabled selected>--Select Category--</option>
                </select>
                <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                </div>
                <div class="row mb-3 col-6 ms-2">
                <label asp-for="Product.CoverTypeId"></label>
                <select asp-for="Product.CoverTypeId" asp-items="@Model.CoverTypeList" class="form-select">
                <option disabled selected>--Select CoverType--</option>
                </select>
                <span asp-validation-for="Product.CoverTypeId" class="text-danger"></span>
                </div>*@
                <div class="col-12">
                    @if (Model.Id != 0)
                    {
                        <button type="submit" class="btn btn-primary" style="width:150px">Update</button>
                    }
                    else
                    {
                        <button type="submit" onclick="return ValidateInput()" class="btn btn-primary" style="width:150px">Create</button>
                    }


                    <a asp-controller="Sale" asp-action="Index" class="btn btn-secondary" style="width:150px">
                        Back to List
                    </a>
                </div>

            </div>
        </div>
    </div>

</form>
@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}